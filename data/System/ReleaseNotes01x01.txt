%META:TOPICPARENT{name="ReleaseHistory"}%

Marked sections needing updates for 1.1 with ***UPDATE ME***

---+!! Foswiki Release 1.1.0 - 17 Jan 2010 ***UPDATE ME***

%TOC%

---++ Foswiki - The Free and Open Source Wiki

Foswiki is an enterprise collaboration and information sharing tool targeted 
for professional use in many types of organizations: from small businesses to 
multi-nationals, from one-product open source groups, to worldwide research networks.

Foswiki is a wiki: fundamentally, a website with editable web pages. It looks 
like a normal web site but it encourages contributions, edits, updates, questions, 
and answers from its users. It's a powerful way of enabling a community to 
communicate asynchronously using intranet and public internet websites. 
Foswiki is simple to learn and use. It aims to provide a transparent way 
for you to publish and exchange your ideas with others over the web and 
eliminates the one-webmaster syndrome of outdated intranet content.

Foswiki is a structured wiki with tools that enable users without programming 
skills to build powerful yet simple applications to process information and 
support workflows. Developers can extend the functionality of Foswiki with plugins.

Foswiki is the old TWiki project under a new name. Restrictions on the use 
of the TWiki brand resulted in many of its developers continuing the project 
under the new Foswiki name. Foswiki is backwards compatible with all content 
from older TWiki installations. Foswiki 1.1 ships with a !TWikiCompatibilityPlugin 
installed and activated by default, thus enabling most extensions 
made for TWiki to work under Foswiki.

Since the start of the Foswiki project there have been several releases of TWiki, 
However there have been very few functionality changes, and the useful changes 
have all been tracked in Foswiki, so topics and wiki applications 
supported by TWiki should also work with Foswiki.

Foswiki is released under the GNU General Public License.

---++ Foswiki Releases

   * Foswiki 1.0.0, the first Foswiki was released on 09 Jan 2009.
   * Foswiki 1.0.1, 1.0.2 and 1.0.3 were released internally in the development community, but were never publicly released. 
   * Foswiki 1.0.4 was built 19 Mar 2009. It is a patch release with more than 120 bug fixes relative to 1.0.0 and only very few minor enhancements.
   * Foswiki 1.0.5 was built 25 Apr 2009. It is a patch release with more than 150 bug fixes relative to 1.0.0 and a few enhancements. This patch release further enhances the robustness and the security of the Foswiki software.
   * Foswiki 1.0.6 was built 21 Jun 2009. It is a patch release with more than 200 bug fixes relative to 1.0.0 and some enhancements. This version introduces a major enhancement in security against Cross-Site Request Forgery. Further more a central translation framework got introduced which ease the translation process and enables all users to contribute to translations.
   * Foswiki 1.0.7 was built 20 Sep 2009. It is a patch release with more than 240 bug fixes relative to 1.0.0 and some enhancements. This release fixes some serious issues introduced by the CSRF fix and the redirect cache fix in 1.0.6. Major enhancement that also fixes many annoying editor bugs is the upgrade of the !Tiny MCE editor to version 3.2.2. 
   * Foswiki 1.0.8 was built 29 Nov 2009. It is a patch release with more than 280 bug fixes relative to 1.0.0 and some enhancements. This release fixes a short list of quite annoying old bugs incl a bug that prevented efficient use of MailerContrib for producing newsletters. The Wysiwyg editor has been upgraded with the latest Tiny MCE editor release 3.2.7.
   * Foswiki 1.0.9 was built 17 Jan 2010. It is a patch release with more than 320 bug fixes relative to 1.0.0 and several enhancements. This release fixes many bugs in the Wysiwyg editor, bugs related to more advanced wiki applications and bugs in the Plugin API. It contains several bug fixes and enhancements related to security and spam fighting.
   * Foswiki 1.1.0 was built ***UPDATE ME***

---++ Pre-installed Extensions

Foswiki 1.1 is shipped with the following:

   * *Plugins:* !AutoViewTemplatePlugin, !CommentPlugin, !EditTablePlugin, !EmptyPlugin, !HistoryPlugin, !InterwikiPlugin, !JQueryPlugin, !PreferencesPlugin, !RenderListPlugin, !SlideShowPlugin, !SmiliesPlugin, !SpreadSheetPlugin, !TablePlugin, !TinyMCEPlugin, !TwistyPlugin, !WysiwygPlugin
   * *Contribs:* !BehaviourContrib, !CompareRevisionsAddOn, !FamFamFamContrib, !JSCalendarContrib, !MailerContrib, !TipsContrib, !TopicUserMappingContrib
   * *Skins:* !PatternSkin
   * *Compatibility support* - !TWikiCompatibilityPlugin

---++ What's new &mdash; highlights
***UPDATE ME***

See ReleaseNotes01x00 for detailed information about changes in that release.

---++ Important Changes since Foswiki 1.0.9

Foswiki 1.1 comes with a lot of "under the hood" improvements to the core code, 
with the goal of making it easier to plug in work from other projects, such 
as jQuery, !KinoSearch, Solr and others. We have also worked to improve 
the definition of internal APIs to allow other not-yet-written modules, 
such as store implementations, to plug in. Most of these modifications 
should be invisible to the end user and the admin, but are important to 
position Foswiki for the next generation of improvements.

---+++ Powerful new =QUERY= macro
A number of new features have been added with the goal of improving support 
for wiki applications. These include the powerful new =QUERY= macro, 
which supports formatted access to formfields and other meta-data in 
topics using the same syntax as is used in =IF= and =SEARCH= statements.

The existing =META= macro has been deprecated (it is still available, 
but use is discouraged and it will be removed at some point in the future), 
joining the already-deprecated =METASEARCH=.

---+++ Re-architecting of the SEARCH macro
To improve the speed, consistency and extendability of the most complex 
and important Macro, we've started to separate the generation of search results
from the outputing of FormattedSearch. The most significant user facing 
improvements are speed and reliability changes - with many more unit tests written
to ensure future compatibility.

---+++ FOREACH macro
The extraction of the FormattedSearch system has made it possible to provide a 
Macro that allows users to render a comma separated list into any =header=, 
=footer=, =format= style.

---+++ Testing configuration variables in %IF
Prior to 1.1, %IF could be used to test the value of any configuration
variable (those defined in =configure=). This represented a security risk, so
now only those variables listed in ={AccessibleCFG}= may be accessed this way.
Note that ={AccessibleCFG}= also controls which variables are visible in
=%SEARCH{type="query"= and the new =%QUERY= macro.

---+++ "Copy topic" now copies attachments
The "Copy Topic" function in "More topic actions" now copies attachments as
well as the topic text and form.

---+++ Tailoring of user registration made easier.

The topic System.UserRegistration has been enhanced so it now determines 
whether a custom user registration page exists in %USERSWEB%, and 
includes it if it does; otherwise it includes DefaultUserRegistration.

This means that your tailored version in %USERSWEB% web will not be 
overwritten by future upgrades.

You can create a custom version of the UserRegistration form by first 
copying the topic DefaultUserRegistration to !UserRegistration in 
%USERSWEB% web. This will ensure that your changes will remain intact next time you upgrade.

A couple of common fields are hidden from normal view to make the 
registration page as simple as possible. You can unhide those fields 
on the page by removing =EXCLUDED_= from the =INCLUDE= tags).

---+++ Easy tailoring of reset/change password and change email forms

The topics %SYSTEMWEB%.ResetPassword and %SYSTEMWEB%.ChangePassword now 
only show the change forms when Foswiki is managing the passwords 
(the =configure= setting ={PasswordManager}= set to a manager that handles setting of passwords).

If the {PasswordManager} does not support password changing, 
the ChangePassword and ResetPassword topics will show a simple message. 
This message is defined iby the preference =CHANGEPASSWORDDISABLEDMESSAGE= 
in %SYSTEMWEB%.DefaultPreferences. You can redefine this setting by copying 
it to %USERSWEB%.SitePreferences and change it to include a link to the 
password management website of your organisation.

ChangeEmailAddress will now guide the user to define the email address 
in the user topic when the PasswordManager does not handle hidden email addresses, 
so you should not need to tailor this topic any longer.

---+++ Logging of access failures
Configure and TemplateLogin now log authentication failures to the event logs:
   * =working/logs/configure.log=
   * =working/logs/events.log=
It is possible to monitor these logs with a product like =fail2ban= which will
set firewall filters due to excessive failures.

---+++ =configure= user interface revamp
Also included in 1.1 is a major improvement to the =configure= user interface, that clarifies and simplifies setting configuration options.

---+++ Configure file system checks
The configuration tool =bin/configure= now performs extensive checks of file
system permissions.  The pub and data directories are checked to verify that
all data files match the requested default permissions of =755= for
directories and =644= for data files.  Files with excess permissions are
reported as a warning.  Files with insufficient permissions are noted as
an error.

Because of prior inconsistencies in the files distributed with Foswiki and
TWiki core and extensions, migration of older Foswiki or TWiki installs may
see excessive errors reported by configure.  You are recommended to correct the
file system permissions. 

---+++ Newer modern Icon set for DocumentGraphics.
To celebrate our new look, project and momentum, Foswiki now has a new ICON set 
to update the one shipped for the last 10 years. Using the FamFamFam icon set, 
augmented with icons from other leading graphic artists.

---+++ Notes for extension authors
---++++ API Enhancements
The following functions have been added to the =Foswiki::Func= API:
   * =copyAttachment=

---++++ Deprecated handlers
The following handlers have been deprecated (i.e. they are still available,
but should not be used in new code and will be removed in a future release,
so if you have been used them, you need to modify your code).

The =redirectCGIQueryHandler= plugin handler has been deprecated (it is
still available, but should not be used in new code and will be removed
in a future release, so if you have been used it, you need to modify your
code). This handler assumed a level of interaction with the CGI handling
process that is dangerous if misused, and severely limits the flexibility and
optimisations available to the core.

The =beforeAttachmentSaveHandler= and =afterAttachmentSaveHandler= plugin
handlers have been
deprecated in favour of the newly added =beforeUploadHandler= and
=afterUploadHandler. The new handlers operate on streams, and are
more efficient as well as more secure.

Deprecated handlers will continue to work as documented in 1.1 and for the
immediate future, but will be removed in a future release. Extension authors
are strongly recommended to implement the new handlers as soon as possible.

---++++ Deprecated Foswiki::Func functions
The =readTopicText= and =saveTopicText= functions have been deprecated. Use
=readTopic= and =saveTopic= instead. Both =readTopic= and =saveTopic= have
always been available in Foswiki (and it's predecessor) and are a lot safer.
Existing code can usually be modified to eliminate these deprecated functions
without difficulty.

__Note:__ =readTopicText= had implicit access control checks.
The replacement method, =readTopic= does not, so calling
code must call =checkAccessPermission= explicitly.

---++++ Refactored =Foswiki::Store= and new =Foswiki::Meta= functions
Access checking has been moved from Store up to the Meta and Func routines.
This was done to significantly improve perfomance of the Store backend.

Store was never part of the Foswiki or TWiki API.  Extensions which violate
this API and reference =Store::= functions directly could potentially have
access that was previously blocked by Foswiki and/or may require other changes
to be compatible with Foswiki 1.1.

Extension authors should first try to use the =Foswiki::Func= API.  This is
the preferred API. Pay careful attention to whether or not each =Func::=
method verifies access control and use the =Foswiki::Func::checkAccessPermission=
to verify access.

=Foswiki::Meta= should be used only if =Foswiki::Func= does
not have a needed function. Note that =Foswiki::Meta= functions do not
implicitly perform any access control checks.  Callers of =Foswiki::Meta==
should first use the =Foswiki::Meta::haveAccess=  function to verify access for the
planned actions.  This was done by design to reduce repetitive access control
checks and improve performance.

---++++ Tainting
The Foswiki core now checks values used for web, topic and attachment names for 'taintedness' when FOSWIKI_ASSERTS are enabled. Tainted values are those that have been taken from user input (for example, from topic content or from form fields) without being validated. Such unchecked values are a large potential security hole, and the authors of plugins that manipulate topics or attachments need to check their plugins with Foswiki ASSERTs enabled. If you find a taint error, you can use the functions in =Foswiki::Sandbox= to validate them. For example, to validate a web name and a topic name, you would write:
<verbatim>
$validWebName = Foswiki::Sandbox::untaint(
    $webName, \&Foswiki::Sandbox::validateWebName);
$validTopicName = Foswiki::Sandbox::untaint(
    $topicName, \&Foswiki::Sandbox::validateWebName);
</verbatim>
If =$webName= is not a legal web name, then =$webName= will end up being undefined. Similarly for the topic name.

Note that values are only checked for taintedness when FOSWIKI_ASSERTS are enabled, so unless you run your Foswiki in this mode, you will never see the errors. To enable asserts, simply add the line:
<verbatim>
$ENV{FOSWIKI_ASSERTS} = 1;
</verbatim>
to your =bin/LocalLib.cfg=.

---++ Foswiki Release 1.1.0 Details

---+++ Fixes

<noautolink>
| [[%TASKS%/ItemXX][ItemXX]] | Xxx xx xxxx |
 </noautolink>

---+++ Enhancements

<noautolink>
| [[%TASKS%/ItemXX][ItemXX]] | Xxx xx xxxx |
</noautolink>

---
 <!-- Note: Do not use Bugs: interwiki links because interwiki rule might not be defined
   * Set TASKS = http://foswiki.org/Tasks
-->

*Related Topic:* ReleaseHistory ReleaseNotes01x00
